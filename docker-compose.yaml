# Base worker configuration
x-worker-base: &worker-base
  container_name: temporal-worker
  build:
    context: .
    dockerfile: temporal_worker.Dockerfile
  networks:
    - temporal-network
  restart: unless-stopped
  environment:
    - TEMPORAL_HOST=temporal:7233
    - OTLP_ENDPOINT=http://otel-collector:4317

x-otel-collector-base: &otel-collector-base
  container_name: otel-collector
  image: otel/opentelemetry-collector-contrib:0.130.1
  command: ["--config=/etc/otel-collector-config.yaml"]
  ports:
    - "8889:8889"   # Prometheus exporter metrics
    - "4317:4317"   # OTLP gRPC receiver
    - "4318:4318"   # OTLP HTTP receiver
  networks:
    - temporal-network
  restart: unless-stopped

services:
  temporal: # Temporal dev server
    container_name: temporal
    build:
      context: .
      dockerfile: temporal_cli.Dockerfile
    command: ["server", "start-dev", "--ip", "0.0.0.0"]
    ports:
      - "7233:7233"   # gRPC endpoint
      - "7234:7234"   # HTTP endpoint for health checks
      - "8233:8233"   # HTTP endpoint for UI
      - "60743:60743"   # HTTP endpoint for metrics
    networks:
      - temporal-network

  worker-default:
    <<: *worker-base
    profiles: ["default"]
    depends_on:
      - temporal
      - otel-collector

  worker-dynatrace:
    <<: *worker-base
    profiles: ["dynatrace"]
    depends_on:
      - temporal
      - otel-collector-dynatrace

  worker-elk:
    <<: *worker-base
    profiles: ["elk"]
    depends_on:
      - temporal
      - otel-collector-elk

  # Reference: https://www.jaegertracing.io/docs/2.8/getting-started/
  jaeger:
    profiles:
      - default
      - elk
    container_name: jaeger
    image: cr.jaegertracing.io/jaegertracing/jaeger:2.8.0
    ports:
      - "16686:16686"   # Jaeger UI
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - temporal-network
    restart: unless-stopped

  # Reference: https://prometheus.io/docs/prometheus/latest/installation/
  prometheus:
    profiles:
      - default
      - elk
    container_name: prometheus
    image: prom/prometheus:v3.5.0
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--enable-feature=otlp-write-receive'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"   # Prometheus web UI
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - temporal-network
    restart: unless-stopped

  # Reference: https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html
  elasticsearch:
    profiles:
      - default
      - elk
    container_name: elasticsearch
    image: elasticsearch:9.0.4
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"   # Elasticsearch HTTP API
      - "9300:9300"   # Elasticsearch transport port
    networks:
      - temporal-network
    restart: unless-stopped

  # Reference: https://opentelemetry.io/docs/collector/
  otel-collector: &otel-collector
    <<: *otel-collector-base
    profiles: ["default"]
    volumes:
      - ./otel/otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    depends_on:
      - jaeger
      - prometheus
      - elasticsearch

  # Reference: https://opentelemetry.io/docs/collector/
  otel-collector-dynatrace:
    <<: *otel-collector-base
    profiles: ["dynatrace"]
    volumes:
      - ./otel/otel-collector-config-dynatrace.yaml:/etc/otel-collector-config.yaml:ro
    environment:
      - DYNATRACE_TENANT=${DYNATRACE_TENANT}
      - DYNATRACE_API_TOKEN=${DYNATRACE_API_TOKEN}

  # Reference: https://opentelemetry.io/docs/collector/
  otel-collector-elk:
    <<: *otel-collector
    profiles: ["elk"]
    depends_on:
      - jaeger
      - prometheus
      - elasticsearch
      - kibana

  kibana:
    profiles: ["elk"]
    container_name: kibana
    image: kibana:9.0.4
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - temporal-network

networks:
  temporal-network:
    driver: bridge
